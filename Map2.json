{"paragraphs":[{"text":"%spark2.spark\nval sqlContext = new org.apache.spark.sql.SQLContext(sc)\nval df = sqlContext.sql(\"select lat, lon, acquisitiontime, sog from ais_data_orc where mmsi=1001001\")\ncase class Loc(lat: Double, lon: Double)\ncase class aTime(value: String, loc: Loc)\nval dataPoints = df.map{s => aTime(s.getString(2), Loc( s.getDouble(0), s.getDouble(1)))}\nval dataPointsJson = dataPoints.toJSON.take(10)\nz.angularBind(\"locations\", dataPointsJson)","user":"admin","dateUpdated":"2018-02-27T12:00:21+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@61bfdbb9\ndf: org.apache.spark.sql.DataFrame = [lat: double, lon: double ... 2 more fields]\ndefined class Loc\ndefined class aTime\ndataPoints: org.apache.spark.sql.Dataset[aTime] = [value: string, loc: struct<lat: double, lon: double>]\ndataPointsJson: Array[String] = Array({\"value\":\"2015-10-01 06:14:33\",\"loc\":{\"lat\":-25.874775,\"lon\":55.476868}}, {\"value\":\"2015-10-01 06:14:34\",\"loc\":{\"lat\":-25.874775,\"lon\":55.476868}}, {\"value\":\"2015-10-02 05:12:46\",\"loc\":{\"lat\":-26.442037,\"lon\":55.82175}}, {\"value\":\"2015-10-02 05:12:47\",\"loc\":{\"lat\":-26.442037,\"lon\":55.82175}}, {\"value\":\"2015-10-02 06:49:28\",\"loc\":{\"lat\":-26.44855,\"lon\":55.816383}}, {\"value\":\"2015-10-03 18:17:05\",\"loc\":{\"lat\":-26.364458,\"lon\":55.65641}}, {\"value\":\"2015-10-05 06:51:19\",\"loc\":{\"lat\":-24.947708,\"lon\":58.764285}}, {\"value\":\"2015-10-05 06:51:20\",\"loc\":{\"lat\":-24.947708,\"lon\":58.764285}}, {\"value\":\"2015-10-05 16:14:09\",\"loc\":{\"lat\":-24.952017,\"lon\":58.76509}}, {\"value\":\"2015-10-07 06:21:46\",\"loc\":{\"lat\":-24.712832,\"lon\":58.694033}})\n"}]},"apps":[],"jobName":"paragraph_1519726555271_1809772525","id":"20180227-101555_460686829","dateCreated":"2018-02-27T10:15:55+0000","dateStarted":"2018-02-27T12:00:21+0000","dateFinished":"2018-02-27T12:00:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:346"},{"text":"%angular \n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\" />\n<div id=\"map\" style=\"height: 800px; width: 100%\"> </div>\n<script type=\"text/javascript\">\nfunction initMap() {\n    var map = L.map('map').setView([30.00, -30.00], 3);\n    \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data © <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        maxZoom: 15,\n        minZoom: 3\n    }).addTo(map);\n    \n    var geoMarkers = L.layerGroup().addTo(map);\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    angular.element(el).ready(function() {\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\n          // geoMarkers.clearLayers(); -- if you want to only show new data clear the layer first\n            angular.forEach(newValue, function(ais) {\n           \n                 try { JSON.parse(ais); } catch(error) { alert(error); }\n                windJSON = JSON.parse(ais)\n                var marker = L.marker([windJSON.loc.lat, windJSON.loc.lon]).bindPopup(windJSON.value).addTo(geoMarkers);\n            \n            });\n        })\n    });;\n\n}\n\nif (window.locationWatcher) {\n    // clear existing watcher otherwise we'll have duplicates\n    window.locationWatcher();\n}\n\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://unpkg.com/leaflet@1.0.3/dist/leaflet.js';\n    sc.onload = initMap;\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n}\n</script>","user":"admin","dateUpdated":"2018-02-27T12:00:39+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\" />\n<div id=\"map\" style=\"height: 800px; width: 100%\"> </div>\n<script type=\"text/javascript\">\nfunction initMap() {\n    var map = L.map('map').setView([30.00, -30.00], 3);\n    \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data © <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        maxZoom: 15,\n        minZoom: 3\n    }).addTo(map);\n    \n    var geoMarkers = L.layerGroup().addTo(map);\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    angular.element(el).ready(function() {\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\n          // geoMarkers.clearLayers(); -- if you want to only show new data clear the layer first\n            angular.forEach(newValue, function(ais) {\n           \n                 try { JSON.parse(ais); } catch(error) { alert(error); }\n                windJSON = JSON.parse(ais)\n                var marker = L.marker([windJSON.loc.lat, windJSON.loc.lon]).bindPopup(windJSON.value).addTo(geoMarkers);\n            \n            });\n        })\n    });;\n\n}\n\nif (window.locationWatcher) {\n    // clear existing watcher otherwise we'll have duplicates\n    window.locationWatcher();\n}\n\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://unpkg.com/leaflet@1.0.3/dist/leaflet.js';\n    sc.onload = initMap;\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n}\n</script>"}]},"apps":[],"jobName":"paragraph_1519726588412_1041675803","id":"20180227-101628_1783367166","dateCreated":"2018-02-27T10:16:28+0000","dateStarted":"2018-02-27T12:00:27+0000","dateFinished":"2018-02-27T12:00:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:348"},{"text":"%angular\n","user":"admin","dateUpdated":"2018-02-27T10:17:00+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1519726620605_-35575144","id":"20180227-101700_615342525","dateCreated":"2018-02-27T10:17:00+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:349"}],"name":"Map2","id":"2D6EBE8MV","angularObjects":{"2CHS8UYQQ:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[{"name":"locations","object":["{\"lat\":-25.874775,\"lon\":55.476868}","{\"lat\":-25.874775,\"lon\":55.476868}","{\"lat\":-26.442037,\"lon\":55.82175}","{\"lat\":-26.442037,\"lon\":55.82175}","{\"lat\":-26.44855,\"lon\":55.816383}","{\"lat\":-26.364458,\"lon\":55.65641}","{\"lat\":-24.947708,\"lon\":58.764285}","{\"lat\":-24.947708,\"lon\":58.764285}","{\"lat\":-24.952017,\"lon\":58.76509}","{\"lat\":-24.712832,\"lon\":58.694033}","{\"lat\":-24.664503,\"lon\":58.532702}","{\"lat\":-24.63939,\"lon\":58.229508}","{\"lat\":-24.639298,\"lon\":58.229053}","{\"lat\":-23.371373,\"lon\":60.74748}","{\"lat\":-23.327703,\"lon\":60.769555}","{\"lat\":-23.327703,\"lon\":60.769555}","{\"lat\":-23.327703,\"lon\":60.769555}","{\"lat\":-23.327482,\"lon\":60.769695}","{\"lat\":-23.297808,\"lon\":60.784778}","{\"lat\":-23.099532,\"lon\":60.788985}","{\"lat\":-22.904028,\"lon\":60.73086}","{\"lat\":-22.903787,\"lon\":60.73078}","{\"lat\":-22.903787,\"lon\":60.73078}","{\"lat\":-22.897695,\"lon\":60.725205}","{\"lat\":-22.833452,\"lon\":60.546795}","{\"lat\":-22.754357,\"lon\":60.52952}"],"noteId":"2D6EBE8MV"}],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}